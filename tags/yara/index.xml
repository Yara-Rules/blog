<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Yara on YaraRules Project</title>
    <link>https://yara-rules.github.io/blog/tags/yara/</link>
    <description>Recent content in Yara on YaraRules Project</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-EN</language>
    <managingEditor>yararules@gmail.com (YaraRules)</managingEditor>
    <webMaster>yararules@gmail.com (YaraRules)</webMaster>
    <copyright>(c) 2017 YaraRules Project.</copyright>
    <lastBuildDate>Tue, 30 Oct 2018 22:43:54 +0100</lastBuildDate>
    
	<atom:link href="https://yara-rules.github.io/blog/tags/yara/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>YaraRET</title>
      <link>https://yara-rules.github.io/blog/2018/10/30/yararet/</link>
      <pubDate>Tue, 30 Oct 2018 22:43:54 +0100</pubDate>
      <author>yararules@gmail.com (YaraRules)</author>
      <guid>https://yara-rules.github.io/blog/2018/10/30/yararet/</guid>
      <description>For this forensics cases which are based in unreliable evidences, we decided to carry out the development of a carving tool for getting files from a raw disk using IoC detection.
YaraRET itâ€™s based in Radare2 and Yara, and it provides 58 magic number&amp;rsquo;s rules for detecting 58 types of files. This tool relies on the idea of a first stage detecting files using its magic numbers and a second stage, selecting or discarding those detected files using Yara, IoCs or its entropy value.</description>
    </item>
    
    <item>
      <title>Radare2 module for Yara</title>
      <link>https://yara-rules.github.io/blog/2017/07/06/radare2-module-for-yara/</link>
      <pubDate>Thu, 06 Jul 2017 00:00:00 +0000</pubDate>
      <author>yararules@gmail.com (YaraRules)</author>
      <guid>https://yara-rules.github.io/blog/2017/07/06/radare2-module-for-yara/</guid>
      <description>From YaraRules Project we would like to introduce you a new Yara module that pretends to use information retrieved from radare2 (r2) to use with Yara.
To use this module it is important to know basic concepts about r2 and Yara.
You can find all the documentation about the installation of the module and use cases in the following link https://r2yara.readthedocs.io/en/latest/. The code is available in our Github repository https://github.com/Yara-Rules/r2yara</description>
    </item>
    
    <item>
      <title>YaGo, converting Yara rules into JSON files</title>
      <link>https://yara-rules.github.io/blog/2017/03/27/yago-converting-yara-rules-into-json-files/</link>
      <pubDate>Mon, 27 Mar 2017 00:00:00 +0000</pubDate>
      <author>yararules@gmail.com (YaraRules)</author>
      <guid>https://yara-rules.github.io/blog/2017/03/27/yago-converting-yara-rules-into-json-files/</guid>
      <description>Yara-Rules project is proud to anounce YaGo. YaGo is a tool that converts Yara rules into JSON files, that&amp;rsquo;s it, simple.
Yara has a great comunity that use it and use a lot of rules, but sometimes it is hard to manage all of them, it is difficult to get a bird&amp;rsquo;s eye view of your rule set so we thought coverting the rules in json format will help.
YaGo can be used as a standalone application or you can embed it on your own application.</description>
    </item>
    
  </channel>
</rss>